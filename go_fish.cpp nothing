// FILE: card_demo.cpp
// This is a small demonstration program showing how the Card and Deck classes are used
#include <iostream>    // Provides cout and cin
#include <cstdlib>     // Provides EXIT_SUCCESS
#include "card.h"
#include "player.h"
#include "deck.h"

using namespace std;

void bookHelper(Card &card1, Card &card2, Player &p1){
    while(p1.checkHandForBook(card1,card2)){
        p1.bookCards(card1,card2);
        p1.removeCardFromHand(card1);
        p1.removeCardFromHand(card2);
        cout<<p1.showBooks();
    }
}

int main() {
    Deck d;
    Card card1;
    Card card2;
    Card foundCard;
    Player p1("Gwyni");
    Player p2("Kelly");

    int totalBookSize = p2.getBookSize() + p1.getBookSize();
    d.shuffle();
    for (int i = 0; i < 7; i++) {
        p1.addCard(d.dealCard());
        p2.addCard(d.dealCard());
    }
    cout << "Gwyni's hand: " << p1.showHand() << endl;
    cout << "Kelly's hand: " << p2.showHand();

    Card neededCard;
    p1turn:
    while (totalBookSize < 26) {

        totalBookSize = p2.getBookSize() + p1.getBookSize();
        cout<<totalBookSize<<endl;

        neededCard = p1.chooseCardFromHand();
        cout << "Gwyni: Do you have any " << neededCard.rankString(neededCard.getRank()) << "'s?" << endl;

        if (p1.sameRankInHand(neededCard)) {
            cout << "Kelly: Yeah! I have the " << neededCard.rankString(neededCard.getRank()) << endl;
            foundCard = p2.removeCardFromHand(neededCard);
            p1.addCard(foundCard);
            bookHelper(foundCard, neededCard, p1);
            goto p1turn;
        } else {
            Card newCard = d.dealCard();
            p1.addCard(newCard);
            cout << "Kelly: Go FISH..." << endl << "Gwyni drew a " << newCard.toString() << endl;
            bookHelper(card1, card2, p1);
            goto p2turn;
        }
        p2turn:
        totalBookSize = p2.getBookSize() + p1.getBookSize();
        neededCard = p2.chooseCardFromHand();
        cout << "Gwyni: Do you have any " << neededCard.rankString(neededCard.getRank()) << "'s?" << endl;
        if (p2.sameRankInHand(neededCard)) {
            cout << "Kelly: Yeah! I have the " << neededCard.rankString(neededCard.getRank()) << endl;
            foundCard = p1.removeCardFromHand(neededCard);
            p2.addCard(foundCard);
            bookHelper(card1, card2, p2);
            goto p2turn;
        } else {
            Card newCard = d.dealCard();
            p2.addCard(newCard);
            cout << "Kelly: Go FISH..." << endl << "Gwyni drew a " << newCard.toString() << endl;
            bookHelper(card1, card2, p2);
            goto p1turn;
        }
    }
}
